<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost/oztrack"/>
        <property name="username" value="oztrack"/>
        <property name="password" value="ozadmin"/>
    </bean>

    <bean id="flyway" class="com.googlecode.flyway.core.Flyway" init-method="migrate" depends-on="dataSource">
        <property name="dataSource" ref="dataSource"/>
        <!--
            Disable flyway's init check to avoid the following exception,
            caused by our initial schema containing PostGIS tables.

            com.googlecode.flyway.core.validation.ValidationException:
            Found non-empty schema 'public' without metadata table! Use init() first to initialize the metadata table.
                at com.googlecode.flyway.core.Flyway.doValidate(Flyway.java:646)
                at com.googlecode.flyway.core.Flyway.migrate(Flyway.java:613)
                ...
        -->
        <property name="disableInitCheck" value="true"/>
    </bean>

    <bean id="jdbcAccess" class="org.oztrack.data.access.impl.JdbcAccessImpl">
         <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean" depends-on="flyway">
        <property name="persistenceUnitName" value="${application.persistenceUnitName}"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>